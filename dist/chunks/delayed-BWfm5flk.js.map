{"version":3,"mappings":"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","names":["sampleRUM","checkpoint","data","timeShift","weight","id","isSelected","args","dataFromErrorObj","error","errData","line","reason","ck","time","pingData","rumData","url","origin","body","script","setup","mainScriptDestination","scriptEl","scriptURL","init","toClassName","name","toCamelCase","g","readBlockConfig","block","config","row","cols","col","value","as","a","imgs","img","ps","p","loadCSS","href","resolve","reject","link","getMetadata","doc","attr","m","createOptimizedPicture","src","alt","eager","breakpoints","picture","pathname","ext","br","source","i","decorateTemplateAndTheme","addClasses","element","classes","c","template","theme","wrapTextNodes","validWrappers","wrap","el","wrapper","nodeName","nodeValue","blockColumn","tagName","decorateButtons","up","twoup","decorateIcon","span","prefix","iconName","decorateIcons","decorateSections","main","section","wrappers","defaultContent","e","sectionMeta","meta","key","style","buildBlock","blockName","content","table","blockEl","rowEl","colEl","val","loadBlock","status","decorationComplete","mod","__variableDynamicImportRuntimeHelper","__vitePreload","decorateBlock","shortBlockName","decorateBlocks","loadHeader","header","headerBlock","loadFooter","footer","footerBlock","waitForFirstImage","lcpCandidate","loadSection","loadCallback","blocks","loadSections","sections","moveAttributes","from","to","attributes","moveInstrumentation","loadFonts","decorateMain","loadEager","loadLazy","hash","loadDelayed","delayed","initSidekick","loadPage"],"ignoreList":[],"sources":["../../src/scripts/aem.js","../../src/scripts/scripts.js"],"sourcesContent":["/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/* eslint-env browser */\nfunction sampleRUM(checkpoint, data) {\n  // eslint-disable-next-line max-len\n  const timeShift = () => (window.performance ? window.performance.now() : Date.now() - window.hlx.rum.firstReadTime);\n  try {\n    window.hlx = window.hlx || {};\n    sampleRUM.enhance = () => {};\n    if (!window.hlx.rum) {\n      const weight = (window.SAMPLE_PAGEVIEWS_AT_RATE === 'high' && 10)\n        || (window.SAMPLE_PAGEVIEWS_AT_RATE === 'low' && 1000)\n        || (new URLSearchParams(window.location.search).get('rum') === 'on' && 1)\n        || 100;\n      const id = Math.random().toString(36).slice(-4);\n      const isSelected = Math.random() * weight < 1;\n      // eslint-disable-next-line object-curly-newline, max-len\n      window.hlx.rum = {\n        weight,\n        id,\n        isSelected,\n        firstReadTime: window.performance ? window.performance.timeOrigin : Date.now(),\n        sampleRUM,\n        queue: [],\n        collector: (...args) => window.hlx.rum.queue.push(args),\n      };\n      if (isSelected) {\n        const dataFromErrorObj = (error) => {\n          const errData = { source: 'undefined error' };\n          try {\n            errData.target = error.toString();\n            errData.source = error.stack\n              .split('\\n')\n              .filter((line) => line.match(/https?:\\/\\//))\n              .shift()\n              .replace(/at ([^ ]+) \\((.+)\\)/, '$1@$2')\n              .replace(/ at /, '@')\n              .trim();\n          } catch (err) {\n            /* error structure was not as expected */\n          }\n          return errData;\n        };\n\n        window.addEventListener('error', ({ error }) => {\n          const errData = dataFromErrorObj(error);\n          sampleRUM('error', errData);\n        });\n\n        window.addEventListener('unhandledrejection', ({ reason }) => {\n          let errData = {\n            source: 'Unhandled Rejection',\n            target: reason || 'Unknown',\n          };\n          if (reason instanceof Error) {\n            errData = dataFromErrorObj(reason);\n          }\n          sampleRUM('error', errData);\n        });\n\n        sampleRUM.baseURL = sampleRUM.baseURL || new URL(window.RUM_BASE || '/', new URL('https://rum.hlx.page'));\n        sampleRUM.collectBaseURL = sampleRUM.collectBaseURL || sampleRUM.baseURL;\n        sampleRUM.sendPing = (ck, time, pingData = {}) => {\n          // eslint-disable-next-line max-len, object-curly-newline\n          const rumData = JSON.stringify({\n            weight,\n            id,\n            referer: window.location.href,\n            checkpoint: ck,\n            t: time,\n            ...pingData,\n          });\n          const { href: url, origin } = new URL(`.rum/${weight}`, sampleRUM.collectBaseURL);\n          const body = origin === window.location.origin\n            ? new Blob([rumData], { type: 'application/json' })\n            : rumData;\n          navigator.sendBeacon(url, body);\n          // eslint-disable-next-line no-console\n          console.debug(`ping:${ck}`, pingData);\n        };\n        sampleRUM.sendPing('top', timeShift());\n\n        sampleRUM.enhance = () => {\n          const script = document.createElement('script');\n          script.src = new URL(\n            '.rum/@adobe/helix-rum-enhancer@^2/src/index.js',\n            sampleRUM.baseURL,\n          ).href;\n          document.head.appendChild(script);\n        };\n        if (!window.hlx.RUM_MANUAL_ENHANCE) {\n          sampleRUM.enhance();\n        }\n      }\n    }\n    if (window.hlx.rum && window.hlx.rum.isSelected && checkpoint) {\n      window.hlx.rum.collector(checkpoint, data, timeShift());\n    }\n    document.dispatchEvent(new CustomEvent('rum', { detail: { checkpoint, data } }));\n  } catch (error) {\n    // something went wrong\n  }\n}\n\n/**\n * Setup block utils.\n */\nfunction setup() {\n  window.hlx = window.hlx || {};\n  window.hlx.RUM_MASK_URL = 'full';\n  window.hlx.RUM_MANUAL_ENHANCE = true;\n  window.hlx.codeBasePath = '';\n  window.hlx.lighthouse = new URLSearchParams(window.location.search).get('lighthouse') === 'on';\n\n  const mainScriptDestination = '/dist/main/main.js';\n  const scriptEl = document.querySelector(`script[src$=\"${mainScriptDestination}\"]`);\n  if (scriptEl) {\n    try {\n      const scriptURL = new URL(scriptEl.src, window.location);\n      if (scriptURL.host === window.location.host) {\n        [window.hlx.codeBasePath] = scriptURL.pathname.split(mainScriptDestination);\n      } else {\n        [window.hlx.codeBasePath] = scriptURL.href.split(mainScriptDestination);\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  }\n}\n\n/**\n * Auto initializiation.\n */\n\nfunction init() {\n  setup();\n  sampleRUM();\n}\n\n/**\n * Sanitizes a string for use as class name.\n * @param {string} name The unsanitized string\n * @returns {string} The class name\n */\nfunction toClassName(name) {\n  return typeof name === 'string'\n    ? name\n      .toLowerCase()\n      .replace(/[^0-9a-z]/gi, '-')\n      .replace(/-+/g, '-')\n      .replace(/^-|-$/g, '')\n    : '';\n}\n\n/**\n * Sanitizes a string for use as a js property name.\n * @param {string} name The unsanitized string\n * @returns {string} The camelCased name\n */\nfunction toCamelCase(name) {\n  return toClassName(name).replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n}\n\n/**\n * Extracts the config from a block.\n * @param {Element} block The block element\n * @returns {object} The block config\n */\n// eslint-disable-next-line import/prefer-default-export\nfunction readBlockConfig(block) {\n  const config = {};\n  block.querySelectorAll(':scope > div').forEach((row) => {\n    if (row.children) {\n      const cols = [...row.children];\n      if (cols[1]) {\n        const col = cols[1];\n        const name = toClassName(cols[0].textContent);\n        let value = '';\n        if (col.querySelector('a')) {\n          const as = [...col.querySelectorAll('a')];\n          if (as.length === 1) {\n            value = as[0].href;\n          } else {\n            value = as.map((a) => a.href);\n          }\n        } else if (col.querySelector('img')) {\n          const imgs = [...col.querySelectorAll('img')];\n          if (imgs.length === 1) {\n            value = imgs[0].src;\n          } else {\n            value = imgs.map((img) => img.src);\n          }\n        } else if (col.querySelector('p')) {\n          const ps = [...col.querySelectorAll('p')];\n          if (ps.length === 1) {\n            value = ps[0].textContent;\n          } else {\n            value = ps.map((p) => p.textContent);\n          }\n        } else value = row.children[1].textContent;\n        config[name] = value;\n      }\n    }\n  });\n  return config;\n}\n\n/**\n * Loads a CSS file.\n * @param {string} href URL to the CSS file\n */\nasync function loadCSS(href) {\n  return new Promise((resolve, reject) => {\n    if (!document.querySelector(`head > link[href=\"${href}\"]`)) {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = href;\n      link.onload = resolve;\n      link.onerror = reject;\n      document.head.append(link);\n    } else {\n      resolve();\n    }\n  });\n}\n\n/**\n * Loads a non module JS file.\n * @param {string} src URL to the JS file\n * @param {Object} attrs additional optional attributes\n */\nasync function loadScript(src, attrs) {\n  return new Promise((resolve, reject) => {\n    if (!document.querySelector(`head > script[src=\"${src}\"]`)) {\n      const script = document.createElement('script');\n      script.src = src;\n      if (attrs) {\n        // eslint-disable-next-line no-restricted-syntax, guard-for-in\n        for (const attr in attrs) {\n          script.setAttribute(attr, attrs[attr]);\n        }\n      }\n      script.onload = resolve;\n      script.onerror = reject;\n      document.head.append(script);\n    } else {\n      resolve();\n    }\n  });\n}\n\n/**\n * Retrieves the content of metadata tags.\n * @param {string} name The metadata name (or property)\n * @param {Document} doc Document object to query for metadata. Defaults to the window's document\n * @returns {string} The metadata value(s)\n */\nfunction getMetadata(name, doc = document) {\n  const attr = name && name.includes(':') ? 'property' : 'name';\n  const meta = [...doc.head.querySelectorAll(`meta[${attr}=\"${name}\"]`)]\n    .map((m) => m.content)\n    .join(', ');\n  return meta || '';\n}\n\n/**\n * Returns a picture element with webp and fallbacks\n * @param {string} src The image URL\n * @param {string} [alt] The image alternative text\n * @param {boolean} [eager] Set loading attribute to eager\n * @param {Array} [breakpoints] Breakpoints and corresponding params (eg. width)\n * @returns {Element} The picture element\n */\nfunction createOptimizedPicture(\n  src,\n  alt = '',\n  eager = false,\n  breakpoints = [{ media: '(min-width: 600px)', width: '2000' }, { width: '750' }],\n) {\n  const url = new URL(src, window.location.href);\n  const picture = document.createElement('picture');\n  const { pathname } = url;\n  const ext = pathname.substring(pathname.lastIndexOf('.') + 1);\n\n  // webp\n  breakpoints.forEach((br) => {\n    const source = document.createElement('source');\n    if (br.media) source.setAttribute('media', br.media);\n    source.setAttribute('type', 'image/webp');\n    source.setAttribute('srcset', `${pathname}?width=${br.width}&format=webply&optimize=medium`);\n    picture.appendChild(source);\n  });\n\n  // fallback\n  breakpoints.forEach((br, i) => {\n    if (i < breakpoints.length - 1) {\n      const source = document.createElement('source');\n      if (br.media) source.setAttribute('media', br.media);\n      source.setAttribute('srcset', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n      picture.appendChild(source);\n    } else {\n      const img = document.createElement('img');\n      img.setAttribute('loading', eager ? 'eager' : 'lazy');\n      img.setAttribute('alt', alt);\n      picture.appendChild(img);\n      img.setAttribute('src', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n    }\n  });\n\n  return picture;\n}\n\n/**\n * Set template (page structure) and theme (page styles).\n */\nfunction decorateTemplateAndTheme() {\n  const addClasses = (element, classes) => {\n    classes.split(',').forEach((c) => {\n      element.classList.add(toClassName(c.trim()));\n    });\n  };\n  const template = getMetadata('template');\n  if (template) addClasses(document.body, template);\n  const theme = getMetadata('theme');\n  if (theme) addClasses(document.body, theme);\n}\n\n/**\n * Wrap inline text content of block cells within a <p> tag.\n * @param {Element} block the block element\n */\nfunction wrapTextNodes(block) {\n  const validWrappers = [\n    'P',\n    'PRE',\n    'UL',\n    'OL',\n    'PICTURE',\n    'TABLE',\n    'H1',\n    'H2',\n    'H3',\n    'H4',\n    'H5',\n    'H6',\n  ];\n\n  const wrap = (el) => {\n    const wrapper = document.createElement('p');\n    wrapper.append(...el.childNodes);\n    [...el.attributes]\n      // move the instrumentation from the cell to the new paragraph, also keep the class\n      // in case the content is a buttton and the cell the button-container\n      .filter(({ nodeName }) => nodeName === 'class'\n        || nodeName.startsWith('data-aue')\n        || nodeName.startsWith('data-richtext'))\n      .forEach(({ nodeName, nodeValue }) => {\n        wrapper.setAttribute(nodeName, nodeValue);\n        el.removeAttribute(nodeName);\n      });\n    el.append(wrapper);\n  };\n\n  block.querySelectorAll(':scope > div > div').forEach((blockColumn) => {\n    if (blockColumn.hasChildNodes()) {\n      const hasWrapper = !!blockColumn.firstElementChild\n        && validWrappers.some((tagName) => blockColumn.firstElementChild.tagName === tagName);\n      if (!hasWrapper) {\n        wrap(blockColumn);\n      } else if (\n        blockColumn.firstElementChild.tagName === 'PICTURE'\n        && (blockColumn.children.length > 1 || !!blockColumn.textContent.trim())\n      ) {\n        wrap(blockColumn);\n      }\n    }\n  });\n}\n\n/**\n * Decorates paragraphs containing a single link as buttons.\n * @param {Element} element container element\n */\nfunction decorateButtons(element) {\n  element.querySelectorAll('a').forEach((a) => {\n    a.title = a.title || a.textContent;\n    if (a.href !== a.textContent) {\n      const up = a.parentElement;\n      const twoup = a.parentElement.parentElement;\n      if (!a.querySelector('img')) {\n        if (up.childNodes.length === 1 && (up.tagName === 'P' || up.tagName === 'DIV')) {\n          a.className = 'button'; // default\n          up.classList.add('button-container');\n        }\n        if (\n          up.childNodes.length === 1\n          && up.tagName === 'STRONG'\n          && twoup.childNodes.length === 1\n          && twoup.tagName === 'P'\n        ) {\n          a.className = 'button primary';\n          twoup.classList.add('button-container');\n        }\n        if (\n          up.childNodes.length === 1\n          && up.tagName === 'EM'\n          && twoup.childNodes.length === 1\n          && twoup.tagName === 'P'\n        ) {\n          a.className = 'button secondary';\n          twoup.classList.add('button-container');\n        }\n      }\n    }\n  });\n}\n\n/**\n * Add <img> for icon, prefixed with codeBasePath and optional prefix.\n * @param {Element} [span] span element with icon classes\n * @param {string} [prefix] prefix to be added to icon src\n * @param {string} [alt] alt text to be added to icon\n */\nfunction decorateIcon(span, prefix = '', alt = '') {\n  const iconName = Array.from(span.classList)\n    .find((c) => c.startsWith('icon-'))\n    .substring(5);\n  const img = document.createElement('img');\n  img.dataset.iconName = iconName;\n  img.src = `${window.hlx.codeBasePath}${prefix}/icons/${iconName}.svg`;\n  img.alt = alt;\n  img.loading = 'lazy';\n  span.append(img);\n}\n\n/**\n * Add <img> for icons, prefixed with codeBasePath and optional prefix.\n * @param {Element} [element] Element containing icons\n * @param {string} [prefix] prefix to be added to icon the src\n */\nfunction decorateIcons(element, prefix = '') {\n  const icons = [...element.querySelectorAll('span.icon')];\n  icons.forEach((span) => {\n    decorateIcon(span, prefix);\n  });\n}\n\n/**\n * Decorates all sections in a container element.\n * @param {Element} main The container element\n */\nfunction decorateSections(main) {\n  main.querySelectorAll(':scope > div:not([data-section-status])').forEach((section) => {\n    const wrappers = [];\n    let defaultContent = false;\n    [...section.children].forEach((e) => {\n      if ((e.tagName === 'DIV' && e.className) || !defaultContent) {\n        const wrapper = document.createElement('div');\n        wrappers.push(wrapper);\n        defaultContent = e.tagName !== 'DIV' || !e.className;\n        if (defaultContent) wrapper.classList.add('default-content-wrapper');\n      }\n      wrappers[wrappers.length - 1].append(e);\n    });\n    wrappers.forEach((wrapper) => section.append(wrapper));\n    section.classList.add('section');\n    section.dataset.sectionStatus = 'initialized';\n    section.style.display = 'none';\n\n    // Process section metadata\n    const sectionMeta = section.querySelector('div.section-metadata');\n    if (sectionMeta) {\n      const meta = readBlockConfig(sectionMeta);\n      Object.keys(meta).forEach((key) => {\n        if (key === 'style') {\n          const styles = meta.style\n            .split(',')\n            .filter((style) => style)\n            .map((style) => toClassName(style.trim()));\n          styles.forEach((style) => section.classList.add(style));\n        } else {\n          section.dataset[toCamelCase(key)] = meta[key];\n        }\n      });\n      sectionMeta.parentNode.remove();\n    }\n  });\n}\n\n/**\n * Gets placeholders object.\n * @param {string} [prefix] Location of placeholders\n * @returns {object} Window placeholders object\n */\n// eslint-disable-next-line import/prefer-default-export\nasync function fetchPlaceholders(prefix = 'default') {\n  window.placeholders = window.placeholders || {};\n  if (!window.placeholders[prefix]) {\n    window.placeholders[prefix] = new Promise((resolve) => {\n      fetch(`${prefix === 'default' ? '' : prefix}/placeholders.json`)\n        .then((resp) => {\n          if (resp.ok) {\n            return resp.json();\n          }\n          return {};\n        })\n        .then((json) => {\n          const placeholders = {};\n          json.data\n            .filter((placeholder) => placeholder.Key)\n            .forEach((placeholder) => {\n              placeholders[toCamelCase(placeholder.Key)] = placeholder.Text;\n            });\n          window.placeholders[prefix] = placeholders;\n          resolve(window.placeholders[prefix]);\n        })\n        .catch(() => {\n          // error loading placeholders\n          window.placeholders[prefix] = {};\n          resolve(window.placeholders[prefix]);\n        });\n    });\n  }\n  return window.placeholders[`${prefix}`];\n}\n\n/**\n * Builds a block DOM Element from a two dimensional array, string, or object\n * @param {string} blockName name of the block\n * @param {*} content two dimensional array or string or object of content\n */\nfunction buildBlock(blockName, content) {\n  const table = Array.isArray(content) ? content : [[content]];\n  const blockEl = document.createElement('div');\n  // build image block nested div structure\n  blockEl.classList.add(blockName);\n  table.forEach((row) => {\n    const rowEl = document.createElement('div');\n    row.forEach((col) => {\n      const colEl = document.createElement('div');\n      const vals = col.elems ? col.elems : [col];\n      vals.forEach((val) => {\n        if (val) {\n          if (typeof val === 'string') {\n            colEl.innerHTML += val;\n          } else {\n            colEl.appendChild(val);\n          }\n        }\n      });\n      rowEl.appendChild(colEl);\n    });\n    blockEl.appendChild(rowEl);\n  });\n  return blockEl;\n}\n\n/**\n * Loads JS and CSS for a block.\n * @param {Element} block The block element\n */\nasync function loadBlock(block) {\n  const status = block.dataset.blockStatus;\n  if (status !== 'loading' && status !== 'loaded') {\n    block.dataset.blockStatus = 'loading';\n    const { blockName } = block.dataset;\n    try {\n      const decorationComplete = new Promise((resolve) => {\n        (async () => {\n          try {\n            const mod = await import(\n              `../blocks/${blockName}/${blockName}.js`\n            );\n            if (mod.default) {\n              await mod.default(block);\n            }\n          } catch (error) {\n            // eslint-disable-next-line no-console\n            console.log(`failed to load module for ${blockName}`, error);\n          }\n          resolve();\n        })();\n      });\n      await Promise.all([decorationComplete]);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(`failed to load block ${blockName}`, error);\n    }\n    block.dataset.blockStatus = 'loaded';\n  }\n  return block;\n}\n\n/**\n * Decorates a block.\n * @param {Element} block The block element\n */\nfunction decorateBlock(block) {\n  const shortBlockName = block.classList[0];\n  if (shortBlockName && !block.dataset.blockStatus) {\n    block.classList.add('block');\n    block.dataset.blockName = shortBlockName;\n    block.dataset.blockStatus = 'initialized';\n    wrapTextNodes(block);\n    const blockWrapper = block.parentElement;\n    blockWrapper.classList.add(`${shortBlockName}-wrapper`);\n    const section = block.closest('.section');\n    if (section) section.classList.add(`${shortBlockName}-container`);\n    // eslint-disable-next-line no-use-before-define\n    decorateButtons(block);\n  }\n}\n\n/**\n * Decorates all blocks in a container element.\n * @param {Element} main The container element\n */\nfunction decorateBlocks(main) {\n  main.querySelectorAll('div.section > div > div').forEach(decorateBlock);\n}\n\n/**\n * Loads a block named 'header' into header\n * @param {Element} header header element\n * @returns {Promise}\n */\nasync function loadHeader(header) {\n  const headerBlock = buildBlock('header', '');\n  header.append(headerBlock);\n  decorateBlock(headerBlock);\n  return loadBlock(headerBlock);\n}\n\n/**\n * Loads a block named 'footer' into footer\n * @param footer footer element\n * @returns {Promise}\n */\nasync function loadFooter(footer) {\n  const footerBlock = buildBlock('footer', '');\n  footer.append(footerBlock);\n  decorateBlock(footerBlock);\n  return loadBlock(footerBlock);\n}\n\n/**\n * Wait for Image.\n * @param {Element} section section element\n */\nasync function waitForFirstImage(section) {\n  const lcpCandidate = section.querySelector('img');\n  await new Promise((resolve) => {\n    if (lcpCandidate && !lcpCandidate.complete) {\n      lcpCandidate.setAttribute('loading', 'eager');\n      lcpCandidate.addEventListener('load', resolve);\n      lcpCandidate.addEventListener('error', resolve);\n    } else {\n      resolve();\n    }\n  });\n}\n\n/**\n * Loads all blocks in a section.\n * @param {Element} section The section element\n */\n\nasync function loadSection(section, loadCallback) {\n  const status = section.dataset.sectionStatus;\n  if (!status || status === 'initialized') {\n    section.dataset.sectionStatus = 'loading';\n    const blocks = [...section.querySelectorAll('div.block')];\n    for (let i = 0; i < blocks.length; i += 1) {\n      // eslint-disable-next-line no-await-in-loop\n      await loadBlock(blocks[i]);\n    }\n    if (loadCallback) await loadCallback(section);\n    section.dataset.sectionStatus = 'loaded';\n    section.style.display = null;\n  }\n}\n\n/**\n * Loads all sections.\n * @param {Element} element The parent element of sections to load\n */\n\nasync function loadSections(element) {\n  const sections = [...element.querySelectorAll('div.section')];\n  for (let i = 0; i < sections.length; i += 1) {\n    // eslint-disable-next-line no-await-in-loop\n    await loadSection(sections[i]);\n  }\n}\n\ninit();\n\nexport {\n  buildBlock,\n  createOptimizedPicture,\n  decorateBlock,\n  decorateBlocks,\n  decorateButtons,\n  decorateIcons,\n  decorateSections,\n  decorateTemplateAndTheme,\n  fetchPlaceholders,\n  getMetadata,\n  loadBlock,\n  loadCSS,\n  loadFooter,\n  loadHeader,\n  loadScript,\n  loadSection,\n  loadSections,\n  readBlockConfig,\n  sampleRUM,\n  setup,\n  toCamelCase,\n  toClassName,\n  waitForFirstImage,\n  wrapTextNodes,\n};\n","import {\n  sampleRUM,\n  loadHeader,\n  loadFooter,\n  decorateButtons,\n  decorateIcons,\n  decorateSections,\n  decorateBlocks,\n  decorateTemplateAndTheme,\n  waitForFirstImage,\n  loadSection,\n  loadSections,\n  loadCSS,\n} from './aem.js';\n\n/**\n * Moves all the attributes from a given elmenet to another given element.\n * @param {Element} from the element to copy attributes from\n * @param {Element} to the element to copy attributes to\n */\nexport function moveAttributes(from, to, attributes) {\n  if (!attributes) {\n    // eslint-disable-next-line no-param-reassign\n    attributes = [...from.attributes].map(({ nodeName }) => nodeName);\n  }\n  attributes.forEach((attr) => {\n    const value = from.getAttribute(attr);\n    if (value) {\n      to.setAttribute(attr, value);\n      from.removeAttribute(attr);\n    }\n  });\n}\n\n/**\n * Move instrumentation attributes from a given element to another given element.\n * @param {Element} from the element to copy attributes from\n * @param {Element} to the element to copy attributes to\n */\nexport function moveInstrumentation(from, to) {\n  moveAttributes(\n    from,\n    to,\n    [...from.attributes]\n      .map(({ nodeName }) => nodeName)\n      .filter((attr) => attr.startsWith('data-aue-') || attr.startsWith('data-richtext-')),\n  );\n}\n\n/**\n * load fonts.css and set a session storage flag\n */\nasync function loadFonts() {\n  await loadCSS(`${window.hlx.codeBasePath}/styles/fonts.css`);\n  try {\n    if (!window.location.hostname.includes('localhost')) sessionStorage.setItem('fonts-loaded', 'true');\n  } catch (e) {\n    // do nothing\n  }\n}\n\n/**\n * Builds all synthetic blocks in a container element.\n * @param {Element} main The container element\n */\nfunction buildAutoBlocks() {\n  try {\n    // TODO: add auto block, if needed\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Auto Blocking failed', error);\n  }\n}\n\n/**\n * Decorates the main element.\n * @param {Element} main The main element\n */\n// eslint-disable-next-line import/prefer-default-export\nexport function decorateMain(main) {\n  // hopefully forward compatible button decoration\n  decorateButtons(main);\n  decorateIcons(main);\n  buildAutoBlocks(main);\n  decorateSections(main);\n  decorateBlocks(main);\n}\n\n/**\n * Loads everything needed to get to LCP.\n * @param {Element} doc The container element\n */\nasync function loadEager(doc) {\n  document.documentElement.lang = 'en';\n  decorateTemplateAndTheme();\n  const main = doc.querySelector('main');\n  if (main) {\n    decorateMain(main);\n    document.body.classList.add('appear');\n    await loadSection(main.querySelector('.section'), waitForFirstImage);\n  }\n\n  sampleRUM.enhance();\n\n  try {\n    /* if desktop (proxy for fast connection) or fonts already loaded, load fonts.css */\n    if (window.innerWidth >= 900 || sessionStorage.getItem('fonts-loaded')) {\n      loadFonts();\n    }\n  } catch (e) {\n    // do nothing\n  }\n}\n\n/**\n * Loads everything that doesn't need to be delayed.\n * @param {Element} doc The container element\n */\nasync function loadLazy(doc) {\n  const main = doc.querySelector('main');\n  await loadSections(main);\n\n  const { hash } = window.location;\n  const element = hash ? doc.getElementById(hash.substring(1)) : false;\n  if (hash && element) element.scrollIntoView();\n\n  loadHeader(doc.querySelector('header'));\n  loadFooter(doc.querySelector('footer'));\n\n  loadCSS(`${window.hlx.codeBasePath}/styles/lazy-styles.css`);\n  loadFonts();\n}\n\n/**\n * Loads everything that happens a lot later,\n * without impacting the user experience.\n */\nfunction loadDelayed() {\n  // eslint-disable-next-line import/no-cycle\n  window.setTimeout(() => import('./delayed.js'), 3000);\n  // load anything that can be postponed to the latest here\n  import('./sidekick.js').then(({ initSidekick }) => initSidekick());\n}\n\nasync function loadPage() {\n  await loadEager(document);\n  await loadLazy(document);\n  loadDelayed();\n}\n\nloadPage();\n"],"file":"chunks/delayed-BWfm5flk.js"}